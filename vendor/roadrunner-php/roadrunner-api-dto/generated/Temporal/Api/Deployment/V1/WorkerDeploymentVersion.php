<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: temporal/api/deployment/v1/message.proto

namespace Temporal\Api\Deployment\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\GPBUtil;
use Google\Protobuf\RepeatedField;

/**
 * A Worker Deployment Version (Version, for short) represents a
 * version of workers within a Worker Deployment. (see documentation of WorkerDeploymentVersionInfo)
 * Version records are created in Temporal server automatically when their
 * first poller arrives to the server.
 * Experimental. Worker Deployment Versions are experimental and might significantly change in the future.
 *
 * Generated from protobuf message <code>temporal.api.deployment.v1.WorkerDeploymentVersion</code>
 */
class WorkerDeploymentVersion extends \Google\Protobuf\Internal\Message
{
    /**
     * A unique identifier for this Version within the Deployment it is a part of.
     * Not necessarily unique within the namespace.
     * The combination of `deployment_name` and `build_id` uniquely identifies this
     * Version within the namespace, because Deployment names are unique within a namespace.
     *
     * Generated from protobuf field <code>string build_id = 1;</code>
     */
    protected $build_id = '';
    /**
     * Identifies the Worker Deployment this Version is part of.
     *
     * Generated from protobuf field <code>string deployment_name = 2;</code>
     */
    protected $deployment_name = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $build_id
     *           A unique identifier for this Version within the Deployment it is a part of.
     *           Not necessarily unique within the namespace.
     *           The combination of `deployment_name` and `build_id` uniquely identifies this
     *           Version within the namespace, because Deployment names are unique within a namespace.
     *     @type string $deployment_name
     *           Identifies the Worker Deployment this Version is part of.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Temporal\Api\Deployment\V1\Message::initOnce();
        parent::__construct($data);
    }

    /**
     * A unique identifier for this Version within the Deployment it is a part of.
     * Not necessarily unique within the namespace.
     * The combination of `deployment_name` and `build_id` uniquely identifies this
     * Version within the namespace, because Deployment names are unique within a namespace.
     *
     * Generated from protobuf field <code>string build_id = 1;</code>
     * @return string
     */
    public function getBuildId()
    {
        return $this->build_id;
    }

    /**
     * A unique identifier for this Version within the Deployment it is a part of.
     * Not necessarily unique within the namespace.
     * The combination of `deployment_name` and `build_id` uniquely identifies this
     * Version within the namespace, because Deployment names are unique within a namespace.
     *
     * Generated from protobuf field <code>string build_id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setBuildId($var)
    {
        GPBUtil::checkString($var, True);
        $this->build_id = $var;

        return $this;
    }

    /**
     * Identifies the Worker Deployment this Version is part of.
     *
     * Generated from protobuf field <code>string deployment_name = 2;</code>
     * @return string
     */
    public function getDeploymentName()
    {
        return $this->deployment_name;
    }

    /**
     * Identifies the Worker Deployment this Version is part of.
     *
     * Generated from protobuf field <code>string deployment_name = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setDeploymentName($var)
    {
        GPBUtil::checkString($var, True);
        $this->deployment_name = $var;

        return $this;
    }

}


<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: temporal/api/enums/v1/common.proto

namespace Temporal\Api\Enums\V1;

use UnexpectedValueException;

/**
 * (-- api-linter: core::0216::synonyms=disabled
 *     aip.dev/not-precedent: It seems we have both state and status, and status is a better fit for workers. --)
 *
 * Protobuf type <code>temporal.api.enums.v1.WorkerStatus</code>
 */
class WorkerStatus
{
    /**
     * Generated from protobuf enum <code>WORKER_STATUS_UNSPECIFIED = 0;</code>
     */
    const WORKER_STATUS_UNSPECIFIED = 0;
    /**
     * Generated from protobuf enum <code>WORKER_STATUS_RUNNING = 1;</code>
     */
    const WORKER_STATUS_RUNNING = 1;
    /**
     * Generated from protobuf enum <code>WORKER_STATUS_SHUTTING_DOWN = 2;</code>
     */
    const WORKER_STATUS_SHUTTING_DOWN = 2;
    /**
     * Generated from protobuf enum <code>WORKER_STATUS_SHUTDOWN = 3;</code>
     */
    const WORKER_STATUS_SHUTDOWN = 3;

    private static $valueToName = [
        self::WORKER_STATUS_UNSPECIFIED => 'WORKER_STATUS_UNSPECIFIED',
        self::WORKER_STATUS_RUNNING => 'WORKER_STATUS_RUNNING',
        self::WORKER_STATUS_SHUTTING_DOWN => 'WORKER_STATUS_SHUTTING_DOWN',
        self::WORKER_STATUS_SHUTDOWN => 'WORKER_STATUS_SHUTDOWN',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

